#[export] static mut time_relu : i64;

#[intern]
fn @matrix_relu (mat: Tensor[f32], output_size: &[i64]) -> Tensor[f32] {
    let start = get_micro_time();

    fn @output_size_fn(n : i32) -> i64 { output_size(n) }
    let output = @alloc_tensor[f32](3, output_size_fn);

    for x in range(0, mat.size_fn(0) as i32) {
        for y in range(0, mat.size_fn(1) as i32) {
            for z in range(0, mat.size_fn(2) as i32) {
                let d = *mat.access_fn([x as i64, y as i64, z as i64]);
                let r = if d < 0 { 0 as f32 } else { d };
                *output.access_fn([x as i64, y as i64, z as i64]) = r;
            }
        }
    }

    time_relu += get_micro_time() - start;

    output
}
