#[export] static mut time_add : i64;

#[intern]
fn @matrix_add (manager: PassManager, matA: Tensor1[f32], matB: Tensor1[f32], output_size: &[i64]) -> Tensor1[f32] {
    let start = get_micro_time();

    let output_size_fixed = [output_size(0)];
    let output = @alloc_tensor_layout_1[f32](manager, output_size_fixed, AllocLayout::RCK);

    for i in vector_range (0, output_size(0) as i32) {
        let A = *matA.access_fn([i as i64]);
        let B = *matB.access_fn([i as i64]);

        *output.access_fn([i as i64]) = A + B;
    }

    time_add += get_micro_time() - start;

    output
}
