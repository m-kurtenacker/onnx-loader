#[export] static mut time_add : i64;

#[intern]
fn @matrix_add (manager: PassManager, matA: Tensor[f32], matB: Tensor[f32], output_size: &[i64]) -> Tensor[f32] {
    let start = get_micro_time();

    fn @output_size_fn(n : i32) -> i64 { output_size(n) }

    let output = @alloc_tensor[f32](manager, matA.num_dims, output_size_fn);

    for instance in multi_loop (manager, matA.num_dims, output_size) {
        let A = *matA.access_fn(instance.index);
        let B = *matB.access_fn(instance.index);

        *output.access_fn(instance.index) = A + B;
    }

    time_add += get_micro_time() - start;

    print_tensor("Addition", output);

    output
}
