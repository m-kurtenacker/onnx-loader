fn @matrix_flatten[T] (manager: PassManager, mat: Tensor3[T], output_size: &[i64]) -> Tensor1[T] {
    let output_size_fixed = [output_size(0)];

    let new_access_fn = @|n : [i64 * 1]| {
        let x = n(0) % mat.size(0);
        let y = (n(0) / mat.size(0)) % mat.size(1);
        let c = (n(0) / mat.size(0)) / mat.size(1);

        mat.access_fn([x, y, c])
    };

    Tensor1[T] {
        buffer = mat.buffer,
        size = output_size_fixed,
        access_fn = new_access_fn
    }
}

#[intern]
fn @matrix_flatten_f32 (manager: PassManager, mat: Tensor3[f32], output_size: &[i64]) {
    let output = @matrix_flatten[f32](manager, mat, output_size);

    output
}
